http://www.rubydoc.info/gems/fxruby/Fox
http://api.rubyonrails.org/

Implement composite pattern for lotes
http://stackoverflow.com/questions/17603142/implementing-the-composite-pattern-in-ruby-on-rails

In order to implement a lote, I need to change associations

Create ActiveRecord class Lote

 order.line_items.each do |line_item|
 	line_item.product
 	line_item.lote
 end

 ior instead:

 order.line_items.each do |line_item|
 	line_item.product # Returns a raw product or a lote
 end

class Lote < ActiveRecord::Base
has_many products 
belongs_to line_tem
end

class LineItem
belongs_to :lote  (new)
belong_to :product
belongs_to :order
end

class Order
belongs_to :customer
has_many :line_items, :dependent => :destroy 
has_many :lotes through :line_items (new)  (But should not be destroyed)
end

Create test for this. 

Small improvements
Columns can be manually extended, but extend automatically based on content?
Order products when header is pressed
Validate csv files when importing 
If orders table is empty, presing the header causes a crash